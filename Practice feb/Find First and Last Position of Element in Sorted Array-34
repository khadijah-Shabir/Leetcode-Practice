 #include <vector>
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first_index = firstOcc(nums, nums.size(), target);
        int last_index = lastOcc(nums, nums.size(), target);
        
        return {first_index, last_index};
    }
    
    int firstOcc(vector<int>& nums, int size, int target) {
        int start = 0;
        int end = size - 1;
        int mid;
        int ans = -1;
        
        while (start <= end) {
            mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                ans = mid;
                end = mid - 1;
            } else if (target > nums[mid]) {
                start = mid + 1;
            } else if (target < nums[mid]) {
                end = mid - 1;
            }
        }
        return ans;
    }
    
    int lastOcc(vector<int>& nums, int size, int target) {
        int start = 0;
        int end = size - 1;
        int mid;
        int ans = -1;
        
        while (start <= end) {
            mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                ans = mid;
                start = mid + 1;
            } else if (target > nums[mid]) {
                start = mid + 1;
            } else if (target < nums[mid]) {
                end = mid - 1;
            }
        }
        return ans;
    }
};

